{
	"nodes":[
		{"id":"a9c9a5efa8c5f33d","type":"group","x":-1620,"y":-800,"width":570,"height":680,"label":"Legend"},
		{"id":"12b066ed3c4418ea","type":"group","x":-860,"y":-540,"width":980,"height":360,"label":"Network Abstraction Layer"},
		{"id":"13a1f59de226a1aa","type":"group","x":-860,"y":-120,"width":2200,"height":160,"label":"Hardware Abstraction Layer"},
		{"id":"07026937a24ec799","type":"group","x":-860,"y":80,"width":2200,"height":140,"label":"Hardware Layer"},
		{"id":"d703e4f1ef2bc693","type":"group","x":1380,"y":-1880,"width":380,"height":400,"label":"To be placed"},
		{"id":"5b533bc6db11fa8c","type":"text","text":"Arrows","x":-1600,"y":-780,"width":250,"height":60},
		{"id":"50c259e5c520cb82","type":"text","text":"multiple options (TBD)","x":-1600,"y":-685,"width":250,"height":60,"color":"4"},
		{"id":"fa5154ece6341195","type":"text","text":"> [!info]- Hierarchical ordering in software\n> data can go both ways, but per-operation there's only one way transfer. ","x":-1600,"y":-460,"width":250,"height":140,"color":"5"},
		{"id":"64c73b5895753bac","type":"text","text":"Data IO to general functionality module","x":-1600,"y":-300,"width":250,"height":85,"color":"6"},
		{"id":"530d3f5c6cd85d70","type":"text","text":"Below: Hardware specific, Above: Bootloader Software","x":-860,"y":-680,"width":2200,"height":50},
		{"id":"3bcf48c4de1c08ae","type":"text","text":"External connection (not immediately important)","x":-1600,"y":-600,"width":250,"height":120,"color":"3"},
		{"id":"ca5e0aa8ecd9f863","type":"text","text":"Application (Logic)","x":-1320,"y":-390,"width":250,"height":60,"color":"5"},
		{"id":"2e97e8266e38c1fe","type":"text","text":"i don't know","x":-1320,"y":-300,"width":250,"height":60,"color":"3"},
		{"id":"d220c3e8db0069eb","type":"text","text":"Hardware","x":-1320,"y":-220,"width":250,"height":60,"color":"1"},
		{"id":"7736fd02b309eb5b","type":"text","text":"Ethernet","x":-220,"y":120,"width":250,"height":60,"color":"1"},
		{"id":"3c447c8a4d63a741","type":"text","text":"Flash Memory","x":80,"y":120,"width":250,"height":60,"color":"1"},
		{"id":"56448bccefa65734","type":"text","text":"GPIO","x":680,"y":120,"width":610,"height":60,"color":"1"},
		{"id":"4fca5d34bd89679b","type":"text","text":"The HAL is responsible for interfacing between hardware (pins, memory mapped IO) to convenient function handles for the higher layers to use. HAL is MCU-specific","x":-840,"y":-100,"width":560,"height":120},
		{"id":"34df80d4842cfe2c","type":"text","text":"TCP/IP (LWIP)","x":-220,"y":-280,"width":250,"height":60,"color":"2"},
		{"id":"9dc02e1e0dce9638","type":"text","text":"**EB Heartbeat**\nfault manager has requested keep beating or emergency. This module is responsible for that happening","x":680,"y":-575,"width":330,"height":190,"color":"4"},
		{"id":"2255b858e081cb54","type":"text","text":"Braking PCB","x":680,"y":290,"width":250,"height":60},
		{"id":"4898908e6e9227ec","type":"text","text":"`peripherals.GPIO.take()` GPIO Object","x":680,"y":-80,"width":610,"height":80,"color":"6"},
		{"id":"efaa64af4628d73b","type":"text","text":"The hardware layer consists of the peripherals & components the bootloader needs to interact with","x":-840,"y":100,"width":560,"height":100},
		{"id":"e617b58171739172","type":"file","file":"dreamteam/bootloader/rfc.md","subpath":"#Requirements","x":1370,"y":-1380,"width":400,"height":884},
		{"id":"64205b68f0ae637c","type":"text","text":"LEDs","x":1040,"y":290,"width":250,"height":60,"color":"1"},
		{"id":"1b1d3713ab8adf83","type":"text","text":"Ground Station","x":-220,"y":380,"width":250,"height":60},
		{"id":"380e14f78fc47b2e","type":"text","text":"Some NVM (TBD)","x":380,"y":120,"width":250,"height":60,"color":"1"},
		{"id":"2d2e52673ad0827a","type":"text","text":"# Questions\n- (s) pls discuss [[CortexM7#Exceptions & the Exception Model]] \n\t- how do these come into play when designing software architecture\n\t- in general - how to use interrupts\n- (g) do we need analog out from main pcb for braking heartbeat, or is digital (GPIO) out \"enough\"?\n- (s?) how does a heartbeat come into play when OS scheduler\n\t- is it possible that heartbeat toggle is delayed because of scheduling?\n- (?) what is a kernel (context=operating system but also not operating system, s mentioned kernel w/o OS)\n\t- whats a OS kernel function (examples? what do we need/can we use?)\n- (s) do we use interrupts for toggling high/low for heartbeat?\n\t\t- how do we time the interrupts?\n\t\t- is this a different application in the eyes of the os?\n- What are the different types of exceptions?\n\t- what does each of [[CortexM7#Exceptions & the Exception Model|exception types]] mean?\n\t- (s) are these all the different types of exceptions\n\t- \n","x":1880,"y":-2000,"width":680,"height":840},
		{"id":"cd702d0158301270","type":"text","text":"# Discussion Points\n- do we need a constant voltage (3.3V) from (main) PCB(s) to braking pcb as \"üëç\" or a heartbeat?\n\t- argument for heartbeat: it is an active software event so if application gets stuck in a HIGH state it is not interpreted as all good\n\t- Q for heartbeat: what happens if toggling is delayed slightly? eg 0.5ms high, 0.55ms low, 0.7ms high?\n---\n#### first discussion input: (g‚Üís)\n- Braking PCB needs constant 5V\n\t- (t) is this possible?\n\t- (s) how does scheduling work now?\n\t- (s) should the line be pulled down? how? is this even a thing? (how does \"pulling\" work?)\n\t- (s) what about infinite loops? (`dec %rip`)\n\t\t- how does this affect the status transmission?\n---\n- What are the different types of exceptions?\n\t- for each exception, how do we handle it?\n\t\t- ((TODO! add exception types here after researching [[CortexM7#Exceptions & the Exception Model|here]]))\n\t- for which of these do we want\n\t\t- application reset?\n\t\t- emergency brake?\n\t\t- request new application from GS?\n- (s+?) What states should the bootloader have?","x":1880,"y":-1140,"width":680,"height":1220},
		{"id":"9e4b2a05c46c34f0","type":"text","text":"Interrupt vector table ??","x":1440,"y":-1850,"width":260,"height":50},
		{"id":"abc9ea50813b7264","type":"text","text":"CRC Implementation","x":-40,"y":-1120,"width":245,"height":60,"color":"6"},
		{"id":"4729f62558e467bf","type":"text","text":"### Blinky Application\n- invalid application\n- cannot find GS\n- app fault (types?)","x":920,"y":-978,"width":370,"height":198,"color":"4"},
		{"id":"09eb5da9493f1336","type":"text","text":"Network API deals with\n- connect\n- disconnect\n\nand offers a `send()` and `receive()`","x":-220,"y":-960,"width":290,"height":220,"color":"3"},
		{"id":"e1c665ea3048b640","type":"text","text":"**On load Verify**\n(check that application content matches header & CRC)","x":105,"y":-880,"width":550,"height":100,"color":"4"},
		{"id":"15d6a19e81dde3bb","type":"text","text":"### Communication\nwhen do we need to send/receive?\nmodule for deciding what communication is needed. a lot tbd","x":-220,"y":-1410,"width":380,"height":170,"color":"5"},
		{"id":"05fa5520e079ed58","type":"text","text":"## Path choosing\nwe know whether our application is valid or not, what now?\n","x":230,"y":-1380,"width":450,"height":140,"color":"5"},
		{"id":"f232e4001f8a2c00","type":"text","text":"# Application","x":-220,"y":-2130,"width":1510,"height":160,"color":"5"},
		{"id":"992c99eaaca96171","type":"file","file":"dreamteam/bootloader/bootloader_fsm.md","subpath":"#FSM","x":85,"y":-1680,"width":740,"height":120,"color":"5"},
		{"id":"f69c52c9cf0fe086","type":"text","text":"`Ethernet.take()` Object","x":-220,"y":-80,"width":250,"height":80,"color":"6"},
		{"id":"c28e44cd92a80105","type":"text","text":"Blocks\n","x":-1320,"y":-780,"width":250,"height":60},
		{"id":"88ef3c9bfafdfcf8","type":"text","text":"Generic functionality Module","x":-1320,"y":-685,"width":250,"height":85,"color":"6"},
		{"id":"5dee9a37a2c98e80","type":"text","text":"`dp.flash.take()` Object","x":80,"y":-80,"width":250,"height":80,"color":"6"},
		{"id":"a53cc4b9cf72e98a","type":"text","text":"Non Volatile Memory Object","x":380,"y":-80,"width":250,"height":80,"color":"6"},
		{"id":"f5a5856d2e03f0d1","type":"text","text":"Do Not Fragment and/or Packet Reconstruction","x":-220,"y":-480,"width":250,"height":120,"color":"3"},
		{"id":"5930d9f14729f942","type":"text","text":"Externally Provided","x":-1320,"y":-570,"width":250,"height":60,"color":"2"},
		{"id":"6416551344ff3332","type":"text","text":"Custom Module","x":-1320,"y":-481,"width":250,"height":60,"color":"4"},
		{"id":"da20d17a704dcc23","type":"file","file":"dreamteam/bootloader/bootloader_fsm.md","x":455,"y":-1905,"width":835,"height":125,"color":"5","subpath":"#Fault Manager"},
		{"id":"ffc4c075f1ae0576","x":-1600,"y":-190,"width":250,"height":60,"color":"1","type":"text","text":"Something Broke Path"},
		{"id":"112c5686bc6a164f","type":"text","text":"The network abstraction layer should deal with everything related to getting `connect()`, `send()`, `receive()`, `disconnect()` to work","x":-840,"y":-520,"width":560,"height":320}
	],
	"edges":[
		{"id":"8e287f6e5ac02557","fromNode":"2255b858e081cb54","fromSide":"top","toNode":"56448bccefa65734","toSide":"bottom","toEnd":"none","color":"3"},
		{"id":"21c0086b7f116363","fromNode":"64205b68f0ae637c","fromSide":"top","toNode":"56448bccefa65734","toSide":"bottom","toEnd":"none","color":"3"},
		{"id":"70d7073295ff20ee","fromNode":"1b1d3713ab8adf83","fromSide":"top","toNode":"7736fd02b309eb5b","toSide":"bottom","toEnd":"none","color":"3"},
		{"id":"af12ba7797023c11","fromNode":"3c447c8a4d63a741","fromSide":"top","toNode":"a53cc4b9cf72e98a","toSide":"bottom","color":"4"},
		{"id":"cf5d204d3b3792ef","fromNode":"380e14f78fc47b2e","fromSide":"top","toNode":"a53cc4b9cf72e98a","toSide":"bottom","color":"4"},
		{"id":"5a5823b718fb52cb","fromNode":"3c447c8a4d63a741","fromSide":"top","toNode":"5dee9a37a2c98e80","toSide":"bottom","color":"5"},
		{"id":"6820928d73989f84","fromNode":"7736fd02b309eb5b","fromSide":"top","toNode":"f69c52c9cf0fe086","toSide":"bottom","color":"5"},
		{"id":"13e7475f9b65271c","fromNode":"f69c52c9cf0fe086","fromSide":"top","toNode":"34df80d4842cfe2c","toSide":"bottom","color":"5"},
		{"id":"6063b8ae76732bdb","fromNode":"e1c665ea3048b640","fromSide":"top","toNode":"abc9ea50813b7264","toSide":"bottom","color":"6"},
		{"id":"3c99b81f04e3df48","fromNode":"abc9ea50813b7264","fromSide":"top","toNode":"05fa5520e079ed58","toSide":"bottom","color":"6"},
		{"id":"a520b28883f606b4","fromNode":"34df80d4842cfe2c","fromSide":"top","toNode":"f5a5856d2e03f0d1","toSide":"bottom","toEnd":"none","color":"5"},
		{"id":"d94271883b2a83c8","fromNode":"f5a5856d2e03f0d1","fromSide":"top","toNode":"09eb5da9493f1336","toSide":"bottom","color":"5"},
		{"id":"92b510e8186e1521","fromNode":"09eb5da9493f1336","fromSide":"top","toNode":"abc9ea50813b7264","toSide":"bottom","color":"6"},
		{"id":"2bc0d11807596fa1","fromNode":"5dee9a37a2c98e80","fromSide":"top","toNode":"e1c665ea3048b640","toSide":"bottom","color":"5","label":"pure data \n(app binary)"},
		{"id":"f22261dbdfdcb1fe","fromNode":"a53cc4b9cf72e98a","fromSide":"top","toNode":"e1c665ea3048b640","toSide":"bottom","color":"5","label":"Header,\nCRC"},
		{"id":"23536e1b69cb09b3","fromNode":"4729f62558e467bf","fromSide":"bottom","toNode":"4898908e6e9227ec","toSide":"top","color":"5"},
		{"id":"8c723bd39a87b6d7","fromNode":"56448bccefa65734","fromSide":"top","toNode":"4898908e6e9227ec","toSide":"bottom","fromEnd":"arrow","color":"5"},
		{"id":"31fe5bb2a01e811f","fromNode":"abc9ea50813b7264","fromSide":"top","toNode":"15d6a19e81dde3bb","toSide":"bottom","color":"6"},
		{"id":"87ecb768c3d9de6a","fromNode":"9dc02e1e0dce9638","fromSide":"bottom","toNode":"4898908e6e9227ec","toSide":"top","color":"5"},
		{"id":"563cc3cab0e502e7","fromNode":"05fa5520e079ed58","fromSide":"top","toNode":"992c99eaaca96171","toSide":"bottom","fromEnd":"arrow","color":"5"},
		{"id":"b3682f0d6b6bc6d6","fromNode":"15d6a19e81dde3bb","fromSide":"top","toNode":"992c99eaaca96171","toSide":"bottom","fromEnd":"arrow","color":"5"},
		{"id":"7302c2a65e9934db","fromNode":"992c99eaaca96171","fromSide":"top","toNode":"da20d17a704dcc23","toSide":"bottom","color":"1"},
		{"id":"1ff3aa7a5d25a674","fromNode":"da20d17a704dcc23","fromSide":"bottom","toNode":"4729f62558e467bf","toSide":"top","color":"1"},
		{"id":"c8a7ea950474a468","fromNode":"da20d17a704dcc23","fromSide":"bottom","toNode":"9dc02e1e0dce9638","toSide":"top","color":"5"}
	]
}